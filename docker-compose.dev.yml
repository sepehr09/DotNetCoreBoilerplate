version: "3.8"

services:
  postgres:
    image: postgres:15.2
    # should disable in production
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - myApp-db:/var/lib/postgresql/data/
    networks:
      - myApp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:8-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - myApp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  minio:
    image: minio/minio:latest
    # should disable in production
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    restart: unless-stopped
    command: server /data --console-address ":9001" --address ":9000"
    networks:
      - myApp_network
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "mc alias set local http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD && mc ls local",
        ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s

networks:
  myApp_network:
    driver: bridge

volumes:
  myApp-db:
  redis-data:
  minio-data:
